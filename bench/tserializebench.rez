Intel(R) Core(TM) Duo CPU      T2350  @ 1.86GHz
MemTotal:        1019392 kB
MemFree:          191788 kB
Linux go 2.6.28.7-custom #1 SMP Thu Feb 26 05:03:10 MSK 2009 i686 GNU/Linux
Lua 5.1.4  Copyright (C) 1994-2008 Lua.org, PUC-Rio
LuaJIT 1.1.5  Copyright (C) 2005-2008 Mike Pall, http://luajit.org/

=====BEGINNING LUA-NUCLEO BENCHMARKS=====
=========================================
==========TSERIALIZE BENCHMARKS==========
=========================================
1. Moderate amount(~3-4KBytes) of simple syntetic data
Results:
lua
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
        luabins_save |  1.0000 |   2.81 /       1000 = 2810.000000 us
   metalua_serialize |  3.8078 |  10.70 /       1000 = 10700.000000 us
          tserialize |  4.0854 |  11.48 /       1000 = 11480.000000 us
luajit -O
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
        luabins_save |  1.0000 |   2.44 /       1000 = 2440.000000 us
   metalua_serialize |  2.0287 |   4.95 /       1000 = 4950.000000 us
          tserialize |  2.2459 |   5.48 /       1000 = 5480.000000 us
2. Simple recursive table
Results:
lua
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
   metalua_serialize |  1.0000 |  33.56 /    1000000 = 33.560000 us
          tserialize |  1.0614 |  35.62 /    1000000 = 35.620000 us
luajit -O
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
          tserialize |  1.0000 |  20.90 /    1000000 = 20.900000 us
   metalua_serialize |  1.0512 |  21.97 /    1000000 = 21.970000 us
3. Random generated data
Results:
lua
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
          tserialize |  1.0000 |   7.74 /    1000000 = 7.740000 us
   metalua_serialize |  1.1550 |   8.94 /    1000000 = 8.940000 us
luajit -O
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
          tserialize |  1.0000 |   4.34 /    1000000 = 4.340000 us
   metalua_serialize |  1.5530 |   6.74 /    1000000 = 6.740000 us
4. Sample metalua dump
Results:
lua
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
          tserialize |  1.0000 | 269.79 /       1000 = 269790.000000 us
   metalua_serialize |  1.3488 | 363.88 /       1000 = 363880.000000 us
luajit -O
-------------------------------------------------------------------
                name |     rel | abs s / iter = us (1e-6 s) / iter
-------------------------------------------------------------------
          tserialize |  1.0000 | 161.19 /       1000 = 161190.000000 us
   metalua_serialize |  1.4224 | 229.27 /       1000 = 229270.000000 us
